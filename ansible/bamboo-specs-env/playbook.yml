---
- name: Configuraciones iniciales
  hosts: app
  become: true
  gather_facts: false

  tasks:
    - name: Setear timezone America/Santiago.
      community.general.timezone:
       name: America/Santiago
    
    - name: Install git
      yum:
       name: git
       state: present
       update_cache: true

    - name: Install Java
      yum:
       name: java
       state: present
       update_cache: true

    - name: Install Maven
      yum:
       name: maven
       state: present
       update_cache: true

    - name: Git checkout
      ansible.builtin.git:
       repo: 'https://github.com/rodvaldes/devops-2022.git'
       dest: /home/vagrant/devops-2022


- name: Install Docker
  gather_facts: false
  hosts: app

  tasks:
    - name: Install yum utils
      yum:
        name: yum-utils
        state: latest
      become: true

    - name: Install device-mapper-persistent-data
      yum:
        name: device-mapper-persistent-data
        state: latest
      become: true
    - name: Install lvm2
      yum:
        name: lvm2
        state: latest
      become: true
    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docer-ce.repo
      become: true

    - name: Enable Docker Edge repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-edge'
        option: enabled
        value: 0
      become: true

    - name: Enable Docker Test repo
      ini_file:
        dest: /etc/yum.repos.d/docer-ce.repo
        section: 'docker-ce-test'
        option: enabled
        value: 0
      become: true

    - name: Install Docker
      package:
        name: docker-ce
        state: latest
      become: true

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: true
      become: true

    - name: Add user vagrant to docker group
      user:
        name: vagrant
        groups: docker
        append: true
      become: true

    - name: Add user rvaldes to docker group
      user:
        name: rvaldes
        groups: docker
        append: true
      become: true

    - name: Add user bamboo to docker group
      user:
        name: bamboo
        groups: docker
        append: true
      become: true

    - name: Download pip installer
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /tmp/get-pip.py

    - name: Install pip
      shell: |
        /usr/bin/python3 /tmp/get-pip.py
    
    - name: Install python-postgres packages packages
      pip: "name={{ item }}  state=present"
      with_items:
        - psycopg2-binary  

- name: Instalación y Configuración de PostgreSQL
  hosts: app
  become: true

  vars_files:
    - vars.yml

  pre_tasks:
    - name: "Install packages"
      dnf: "name={{ item }} state=present"
      with_items:
        - postgresql
        - postgresql-server

    - name: "Install packages"
      yum : "name={{ item }} state=present"
      with_items:
        - python3-psycopg2
  tasks:
    - name: "Find out if PostgreSQL is initialized"
      ansible.builtin.stat:
        path: "/var/lib/pgsql/data/pg_hba.conf"
      register: postgres_data

    - name: "Initialize PostgreSQL"
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists
 
    - name: "Start and enable services"
      service: "name={{ item }} state=started enabled=true"
      with_items:
        - postgresql

    - name: "Create Bamboo database"
      postgresql_db:
        state: present
        name: "{{ db_name_bamboo }}"
      become: true
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user_bamboo }}"
        password: "{{ db_password_bamboo }}"
      become: true
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name_bamboo }}"
        roles: "{{ db_user_bamboo }}"
        grant_option: no
        privs: all
      become: true
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user_bamboo }}"
        create: true
      become: true
      become_user: postgres
      notify: restart postgres

    - name: "Create Bitbucket database"
      postgresql_db:
        state: present
        name: "{{ db_name_bitbucket }}"
      become: true
      become_user: postgres

    - name: "Create db user"
      postgresql_user:
        state: present
        name: "{{ db_user_bitbucket }}"
        password: "{{ db_password_bitbucket }}"
      become: true
      become_user: postgres

    - name: "Grant db user access to app db"
      postgresql_privs:
        type: database
        database: "{{ db_name_bitbucket }}"
        roles: "{{ db_user_bitbucket }}"
        grant_option: no
        privs: all
      become: true
      become_user: postgres

    - name: "Allow md5 connection for the db user"
      postgresql_pg_hba:
        dest: "~/data/pg_hba.conf"
        contype: host
        databases: all
        method: md5
        users: "{{ db_user_bitbucket }}"
        create: true
      become: true
      become_user: postgres
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted